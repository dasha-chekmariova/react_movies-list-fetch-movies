{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","inputTitle","a","fetch","responce","json","FindMovie","movieList","useState","title","setTitle","setMovie","error","setError","showPreview","setShowPreview","useEffect","Response","checkConditions","htmlFor","type","value","onChange","event","target","id","placeholder","classNames","onClick","then","movieFromServer","disabled","Error","App","setMovies","newMovie","find","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88a73e6e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export const getMovie = async (inputTitle: string) => {\n  const responce = await fetch(`https://www.omdbapi.com/?apikey=e3df8ec5&t=${inputTitle}`);\n\n  return responce.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  movieList: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movieList }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [showPreview, setShowPreview] = useState(true);\n\n  useEffect(() => {\n    if (movie?.Response === 'False') {\n      setError(true);\n    }\n  }, [movie]);\n\n  const checkConditions = showPreview && movie && movie.Response === 'True';\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n              }}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              onClick={() => {\n                getMovie(title)\n                  .then(movieFromServer => setMovie(movieFromServer));\n\n                setShowPreview(true);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              disabled={movie?.Response === 'False'}\n              onClick={() => {\n                if (movie) {\n                  movieList(movie);\n                }\n\n                setShowPreview(false);\n                setTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">{error && movie?.Error}</h2>\n        {\n          checkConditions && <MovieCard movie={movie} />\n        }\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const movieList = (newMovie: Movie) => {\n    if (!movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies((prev) => [...prev, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {\n          movies && <MoviesList movies={movies} />\n        }\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movieList={movieList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}